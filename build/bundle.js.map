{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/components/Book.svelte","../../src/components/BookList.svelte","../../src/components/Navigation.svelte","../../src/components/Cube.svelte","../../src/components/Image.svelte","../../src/components/Container.svelte","../../src/components/VM.svelte","../../src/components/chapters/Chapter1.svelte","../../src/components/ListItem.svelte","../../src/components/List.svelte","../../src/components/Terminal.svelte","../../src/components/chapters/Chapter2.svelte","../../src/components/CubeNamed.svelte","../../src/components/chapters/Chapter3.svelte","../../src/components/Editor.svelte","../../src/components/Cloud.svelte","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte/easing/index.mjs","../../node_modules/svelte/motion/index.mjs","../../node_modules/svelte/transition/index.mjs","../../src/dragdrop.ts","../../node_modules/svelte/animate/index.mjs","../../src/components/DragDrop.svelte","../../src/components/chapters/Chapter4.svelte","../../src/components/chapters/Chapter5.svelte","../../src/components/chapters/Chapter6.svelte","../../src/components/chapters/Chapter7.svelte","../../src/components/chapters/Chapter8.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.43.1' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script lang=\"ts\">\r\n    export let item;\r\n    export let switchers;\r\n\r\n    function openChapter(id) {\r\n        for (const key in switchers) {\r\n            switchers[key] = false;\r\n        }\r\n        switchers[\"ch\" + id] = true;\r\n    }\r\n</script>\r\n\r\n<section class=\"book\" style=\"--h: {item.h}\">\r\n    <article class=\"back\" />\r\n    <article class=\"page6\">\r\n        <p>{item.content}</p>\r\n        <button on:click={openChapter(item.id)}>Czytaj dalej ...</button>\r\n    </article>\r\n    <article class=\"page5\">\r\n        <img src=\"img/{item.bg}\" alt=\"book picture\" />\r\n    </article>\r\n    <article class=\"page4\" />\r\n    <article class=\"page3\" />\r\n    <article class=\"page2\" />\r\n    <article class=\"page1\" />\r\n    <article class=\"front\">\r\n        <article class=\"front-shadow\" />\r\n        <h1>{item.title}</h1>\r\n        <h2>{item.subtitle}</h2>\r\n    </article>\r\n</section>\r\n\r\n<style>\r\n    .book {\r\n        --s: 50%;\r\n        --l: 33%;\r\n\r\n        margin: 50px 120px;\r\n        transform-style: preserve-3d;\r\n        position: relative;\r\n        height: 300px;\r\n        cursor: pointer;\r\n        backface-visibility: visible;\r\n        color: rgb(32, 30, 30);\r\n    }\r\n\r\n    .front,\r\n    .back,\r\n    .page1,\r\n    .page2,\r\n    .page3,\r\n    .page4,\r\n    .page5,\r\n    .page6 {\r\n        transform-style: preserve-3d;\r\n        position: absolute;\r\n        width: 200px;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n        transform-origin: left center;\r\n        transition: transform 0.5s ease-in-out, box-shadow 0.35s ease-in-out;\r\n    }\r\n\r\n    .front,\r\n    .back {\r\n        background: hsl(var(--h), var(--s), var(--l));\r\n    }\r\n\r\n    .front,\r\n    .page1,\r\n    .page3,\r\n    .page5 {\r\n        border-bottom-right-radius: 0.5em;\r\n        border-top-right-radius: 0.5em;\r\n    }\r\n\r\n    .back,\r\n    .page2,\r\n    .page4,\r\n    .page6 {\r\n        border-bottom-right-radius: 0.5em;\r\n        border-top-right-radius: 0.5em;\r\n    }\r\n\r\n    .front {\r\n        box-shadow: inset -2px -1px 0.3px hsl(var(--h), var(--s), var(--l)),\r\n            inset -4px 0 1px rgb(85, 84, 84),\r\n            inset -8px 0 1px rgb(207, 206, 206),\r\n            inset -12px 0 1px rgb(226, 224, 224);\r\n    }\r\n\r\n    .front-shadow {\r\n        position: absolute;\r\n        height: 100%;\r\n        border-left: 1.9px solid black;\r\n        margin-left: 12px;\r\n        filter: blur(1.3px);\r\n    }\r\n\r\n    .front h1 {\r\n        color: hsl(var(--h), calc(var(--s) - 10%), calc(var(--l) - 10%));\r\n        text-align: center;\r\n        font-size: 200%;\r\n    }\r\n\r\n    .front h2 {\r\n        color: hsl(var(--h), calc(var(--s) - 10%), calc(var(--l) - 15%));\r\n        text-align: center;\r\n        font-size: 100%;\r\n    }\r\n\r\n    .page1 {\r\n        background: #efefef;\r\n    }\r\n\r\n    .page2 {\r\n        background: #efefef;\r\n    }\r\n\r\n    .page3 {\r\n        background: #f5f5f5;\r\n    }\r\n\r\n    .page4 {\r\n        background: #f5f5f5;\r\n    }\r\n\r\n    .page5 {\r\n        background: #fafafa;\r\n        border-left: rgba(148, 126, 126, 0.356) 0.6px solid;\r\n    }\r\n\r\n    .page5 img {\r\n        width: 90%;\r\n        margin-top: 20%;\r\n        margin-left: 4%;\r\n        opacity: 0.75;\r\n    }\r\n\r\n    .page6 {\r\n        background: #fdfdfd;\r\n    }\r\n\r\n    .page6 p {\r\n        margin: 30px;\r\n        font-size: 120%;\r\n    }\r\n\r\n    .page6 button {\r\n        margin-left: 15%;\r\n        cursor: zoom-in;\r\n    }\r\n\r\n    .book:hover .front {\r\n        transform: rotateY(-160deg) scale(1.1);\r\n        box-shadow: 0 1em 3em 0 rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    .book:hover .page1 {\r\n        transform: rotateY(-150deg) scale(1.1);\r\n        box-shadow: 0 1em 3em 0 rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    .book:hover .page2 {\r\n        transform: rotateY(-30deg) scale(1.1);\r\n        box-shadow: 0 1em 3em 0 rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    .book:hover .page3 {\r\n        transform: rotateY(-140deg) scale(1.1);\r\n        box-shadow: 0 1em 3em 0 rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    .book:hover .page4 {\r\n        transform: rotateY(-40deg) scale(1.1);\r\n        box-shadow: 0 1em 3em 0 rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    .book:hover .page5 {\r\n        transform: rotateY(-130deg) scale(1.1);\r\n        box-shadow: 0 1em 3em 0 rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    .book:hover .page6 {\r\n        transform: rotateY(-50deg) scale(1.1);\r\n        box-shadow: 0 1em 3em 0 rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    .book:hover .back {\r\n        transform: rotateY(-20deg) scale(1.1);\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    import Book from \"./Book.svelte\";\r\n    export let items;\r\n    export let switchers;\r\n</script>\r\n\r\n<section>\r\n    <section class=\"books\">\r\n        {#each items as item}\r\n            <Book {item} bind:switchers />\r\n        {/each}\r\n    </section>\r\n</section>\r\n\r\n<style>\r\n    .books {\r\n        margin: 0 200px 0 70px;\r\n        display: flex;\r\n        flex-flow: row wrap;\r\n        justify-content: space-evenly;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    export let switchers;\r\n    export let tabs;\r\n\r\n    function openMenu() {\r\n        for (const key in switchers) {\r\n            switchers[key] = false;\r\n        }\r\n        switchers[\"menu\"] = true;\r\n    }\r\n\r\n    function switchTab(id) {\r\n        tabs.forEach((item) => {\r\n            if (item.id == id) return;\r\n            item.active = false;\r\n        });\r\n    }\r\n</script>\r\n\r\n<button on:click={openMenu}>Powrót do listy rozdziałów ...</button>\r\n\r\n<div class=\"command\">w tym podrozdziale jesteś ...</div>\r\n<br />\r\n<div class=\"bar\">\r\n    {#each tabs as tab}\r\n        <input\r\n            on:click={switchTab(tab.id)}\r\n            bind:value={tab.active}\r\n            class=\"bar-input\"\r\n            type=\"radio\"\r\n            name=\"input\"\r\n            id=\"input_{tab.id}\"\r\n            checked\r\n        />\r\n        <div class=\"bar-view\">\r\n            <label class=\"bar-button\" for=\"input_{tab.id}\" />\r\n        </div>\r\n    {/each}\r\n</div>\r\n\r\n<style>\r\n    .bar {\r\n        display: flex;\r\n        flex-direction: row-reverse;\r\n        margin: auto auto 0;\r\n        width: 300px;\r\n        max-width: calc(100% - 30px);\r\n    }\r\n    .bar-input {\r\n        opacity: 0;\r\n        pointer-events: none;\r\n        position: absolute;\r\n        top: -9999px;\r\n        left: -9999px;\r\n    }\r\n    .bar-input:checked ~ .bar-view:nth-child(10):after {\r\n        transition-delay: -0.05s;\r\n    }\r\n    .bar-input:checked ~ .bar-view:nth-child(10) .bar-button:before {\r\n        transition-delay: 0.01s;\r\n    }\r\n    .bar-input:checked ~ .bar-view:nth-child(8):after {\r\n        transition-delay: 0.05s;\r\n    }\r\n    .bar-input:checked ~ .bar-view:nth-child(8) .bar-button:before {\r\n        transition-delay: 0.11s;\r\n    }\r\n    .bar-input:checked ~ .bar-view:nth-child(6):after {\r\n        transition-delay: 0.15s;\r\n    }\r\n    .bar-input:checked ~ .bar-view:nth-child(6) .bar-button:before {\r\n        transition-delay: 0.21s;\r\n    }\r\n    .bar-input:checked ~ .bar-view:nth-child(4):after {\r\n        transition-delay: 0.25s;\r\n    }\r\n    .bar-input:checked ~ .bar-view:nth-child(4) .bar-button:before {\r\n        transition-delay: 0.31s;\r\n    }\r\n    .bar-input:checked ~ .bar-view:nth-child(2):after {\r\n        transition-delay: 0.35s;\r\n    }\r\n    .bar-input:checked ~ .bar-view:nth-child(2) .bar-button:before {\r\n        transition-delay: 0.41s;\r\n    }\r\n    .bar-input:checked ~ .bar-view:after {\r\n        transform: scaleX(1);\r\n    }\r\n    .bar-input:checked ~ .bar-view .bar-button:before {\r\n        transform: none;\r\n        opacity: 1;\r\n    }\r\n    .bar-input:checked + .bar-view .bar-button:after {\r\n        opacity: 1;\r\n        -webkit-animation: bouncing 0.6s cubic-bezier(0, 0, 0.74, 1.04) infinite;\r\n        animation: bouncing 0.6s cubic-bezier(0, 0, 0.74, 1.04) infinite;\r\n    }\r\n    .bar-view {\r\n        display: flex;\r\n        flex-grow: 1;\r\n        position: relative;\r\n    }\r\n    .bar-view:after {\r\n        height: 2px;\r\n        top: calc(50% - 1px);\r\n        transition: transform 0.06s cubic-bezier(0, 0.72, 0.58, 1);\r\n        transform: scaleX(0);\r\n        background: #ffb732;\r\n        transform-origin: left;\r\n        z-index: 1;\r\n    }\r\n    .bar-view:not(:last-child):before,\r\n    .bar-view:not(:last-child):after {\r\n        content: \"\";\r\n        width: calc(100% - 24px);\r\n        position: absolute;\r\n        right: calc(50% + 12px);\r\n    }\r\n    .bar-view:not(:last-child):before {\r\n        height: 6px;\r\n        top: calc(50% - 3px);\r\n        background: #3c6997;\r\n    }\r\n    .bar-view:not(:last-child):nth-child(2):after {\r\n        transition-delay: 0s;\r\n    }\r\n    .bar-view:not(:last-child):nth-child(2) .bar-button:before {\r\n        transition-delay: 0.06s;\r\n    }\r\n    .bar-view:not(:last-child):nth-child(4):after {\r\n        transition-delay: 0.1s;\r\n    }\r\n    .bar-view:not(:last-child):nth-child(4) .bar-button:before {\r\n        transition-delay: 0.16s;\r\n    }\r\n    .bar-view:not(:last-child):nth-child(6):after {\r\n        transition-delay: 0.2s;\r\n    }\r\n    .bar-view:not(:last-child):nth-child(6) .bar-button:before {\r\n        transition-delay: 0.26s;\r\n    }\r\n    .bar-view:not(:last-child):nth-child(8):after {\r\n        transition-delay: 0.3s;\r\n    }\r\n    .bar-view:not(:last-child):nth-child(8) .bar-button:before {\r\n        transition-delay: 0.36s;\r\n    }\r\n    .bar-view:not(:last-child):nth-child(10):after {\r\n        transition-delay: 0.4s;\r\n    }\r\n    .bar-view:not(:last-child):nth-child(10) .bar-button:before {\r\n        transition-delay: 0.46s;\r\n    }\r\n    .bar-button {\r\n        display: block;\r\n        width: 30px;\r\n        height: 30px;\r\n        margin: auto;\r\n        border-radius: 50%;\r\n        border: 3px solid #3c6997;\r\n        position: relative;\r\n        cursor: pointer;\r\n        box-shadow: inset 2px 2px 4px rgba(0, 0, 0, 0.3),\r\n            2px 2px 8px rgba(0, 0, 0, 0.1);\r\n    }\r\n    .bar-button:hover:after {\r\n        transform: none;\r\n        opacity: 1;\r\n    }\r\n    .bar-button:before,\r\n    .bar-button:after {\r\n        content: \"\";\r\n        position: absolute;\r\n        pointer-events: none;\r\n    }\r\n    .bar-button:before {\r\n        width: 100%;\r\n        height: 100%;\r\n        border-radius: 50%;\r\n        background: radial-gradient(circle at center, #ffdd4a, #fe9000);\r\n        transform: scale(0.3);\r\n        opacity: 0;\r\n        transition-property: transform, opacity;\r\n        transition-duration: 0.2s;\r\n        transition-timing-function: cubic-bezier(0, 0.72, 0.58, 1);\r\n    }\r\n    .bar-button:after {\r\n        border: 8px solid transparent;\r\n        border-top-color: #3c6997;\r\n        bottom: calc(100% + 10px);\r\n        left: calc(50% - 8px);\r\n        transform: translateY(-10px);\r\n        opacity: 0;\r\n        transition-property: transform, opacity;\r\n        transition-duration: 0.2s;\r\n        transition-timing-function: cubic-bezier(0, 0, 0, 1.97);\r\n    }\r\n\r\n    .command {\r\n        text-align: center;\r\n        font-family: \"Ubuntu Mono\", monospace;\r\n        letter-spacing: 1px;\r\n        margin: 30px auto auto;\r\n        padding-bottom: 8px;\r\n        -webkit-animation: fade 2s ease infinite;\r\n        animation: fade 2s ease infinite;\r\n    }\r\n\r\n    html,\r\n    body {\r\n        width: 100%;\r\n        height: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        background: linear-gradient(\r\n            to bottom right,\r\n            rgba(255, 221, 74, 0.1),\r\n            #fff\r\n        );\r\n    }\r\n\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n    *:before,\r\n    *:after {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    @-webkit-keyframes bouncing {\r\n        0%,\r\n        100% {\r\n            transform: translateY(0);\r\n        }\r\n        50% {\r\n            transform: translateY(5px);\r\n        }\r\n    }\r\n\r\n    @keyframes bouncing {\r\n        0%,\r\n        100% {\r\n            transform: translateY(0);\r\n        }\r\n        50% {\r\n            transform: translateY(5px);\r\n        }\r\n    }\r\n    @-webkit-keyframes fade {\r\n        50% {\r\n            opacity: 0.3;\r\n        }\r\n    }\r\n    @keyframes fade {\r\n        50% {\r\n            opacity: 0.3;\r\n        }\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    export let cube;\r\n\r\n    let faces = [\"top\", \"bottom\", \"left\", \"right\", \"front\", \"back\"];\r\n</script>\r\n\r\n<article\r\n    class=\"container\"\r\n    style=\"--size: {cube.size}; --translate: {cube.translate}; --translate2: -{cube.translate}; --speed: {cube.speed}; --rotx: {cube\r\n        .rotate[0]}; --roty: {cube.rotate[1]}; --rotz: {cube\r\n        .rotate[2]}; margin: {cube.margin};\"\r\n>\r\n    <div class=\"cube\">\r\n        {#each faces as face}\r\n            <div class=\"face {face}\" style=\"background: {cube.color};\" />\r\n        {/each}\r\n    </div>\r\n</article>\r\n\r\n<style>\r\n    @keyframes turn {\r\n        from {\r\n            transform: rotate3d(0, 0, 0, 0);\r\n        }\r\n        to {\r\n            transform: rotate3d(var(--rotx), var(--roty), var(--rotz), 360deg);\r\n        }\r\n    }\r\n\r\n    .container {\r\n        width: var(--size);\r\n        height: var(--size);\r\n        perspective: 500px;\r\n    }\r\n\r\n    .cube {\r\n        position: relative;\r\n        width: var(--size);\r\n        height: var(--size);\r\n        transform-style: preserve-3d;\r\n        animation: turn var(--speed) linear infinite;\r\n    }\r\n\r\n    .face {\r\n        width: var(--size);\r\n        height: var(--size);\r\n        border: 0.7px solid black;\r\n        position: absolute;\r\n        opacity: 0.5;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        font-family: Arial, sans-serif;\r\n        font-size: 1.5rem;\r\n        transition: transform 900ms;\r\n    }\r\n\r\n    .front {\r\n        transform: translateZ(var(--translate));\r\n    }\r\n\r\n    .back {\r\n        transform: translateZ(var(--translate2)) rotateY(180deg);\r\n    }\r\n\r\n    .left {\r\n        transform: translateX(var(--translate2)) rotateY(-90deg);\r\n    }\r\n\r\n    .right {\r\n        transform: translateX(var(--translate)) rotateY(90deg);\r\n    }\r\n\r\n    .top {\r\n        transform: translateY(var(--translate2)) rotateX(90deg);\r\n    }\r\n\r\n    .bottom {\r\n        transform: translateY(var(--translate)) rotateX(-90deg);\r\n    }\r\n\r\n    @media (prefers-reduced-motion: reduce) {\r\n        .cube {\r\n            animation: none;\r\n            transform: rotate3d(1, 1, 0, 45deg);\r\n        }\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    import Cube from \"./Cube.svelte\";\r\n\r\n    let cube = {\r\n        size: \"70px\",\r\n        translate: \"35px\",\r\n        speed: \"7s\",\r\n        color: \"blue\",\r\n        rotate: [1, 0, 0.2],\r\n        margin: \"30px\",\r\n    };\r\n</script>\r\n\r\n<Cube {cube} />\r\n\r\n<style>\r\n</style>\r\n","<script lang=\"ts\">\r\n    import Cube from \"./Cube.svelte\";\r\n\r\n    let cube = {\r\n        size: \"42px\",\r\n        translate: \"21px\",\r\n        speed: \"3s\",\r\n        color: \"purple\",\r\n        rotate: [1, 1, 0],\r\n        margin: \"20px\",\r\n    };\r\n</script>\r\n\r\n<Cube {cube} />\r\n\r\n<style>\r\n</style>\r\n","<script lang=\"ts\">\r\n    import Cube from \"./Cube.svelte\";\r\n\r\n    let cube = {\r\n        size: \"168px\",\r\n        translate: \"84px\",\r\n        speed: \"20s\",\r\n        color: \"darkgrey\",\r\n        rotate: [0, 0.5, 1],\r\n        margin: \"50px\",\r\n    };\r\n</script>\r\n\r\n<Cube {cube} />\r\n\r\n<style>\r\n</style>\r\n","<script lang=\"ts\">\r\n    import Navigation from \"../Navigation.svelte\";\r\n    import Image from \"../Image.svelte\";\r\n    import Container from \"../Container.svelte\";\r\n    import VM from \"../VM.svelte\";\r\n    export let switchers;\r\n\r\n    let tabs = [\r\n        { id: 1, active: false },\r\n        { id: 0, active: true },\r\n    ];\r\n</script>\r\n\r\n<Navigation bind:switchers bind:tabs />\r\n<section class=\"subbody\">\r\n    <h1>Rozdział 1</h1>\r\n    <h2>- Konteneryzacja -</h2>\r\n\r\n    {#if tabs[1].active}\r\n        <article class=\"content-area\">\r\n            <h2>1.1</h2>\r\n\r\n            <h3>Na czym polega wirtualizacja?</h3>\r\n            By opisać konteneryzację, warto zacząć najpierw od pokrewnego i nieco\r\n            starszego pojęcia wirtualizacji. Polega to na symulowaniu obecności wirtualnych\r\n            zasobów, które to polega na tym, że procesom logicznym przydzielane są\r\n            fizyczne, rzeczywiste zasoby komputera hosta. W wyniku wirtualizacji\r\n            zostają uruchamiane wirtualne maszyny.Ważną zaletą wirtualizacji jest\r\n            możliwość izolacji aplikacji wraz z procesami i danymi pomiędzy poszczególne\r\n            maszyny wirtualne, co zwiększa bezpieczeństwo.\r\n            <br /><br />\r\n            Charakteryzuje się to jednak tym, że każda maszyna wirtualna posiada\r\n            swój cały, niezależny ekosystem, w tym i system operacyjny. Sprawia to,\r\n            że taka maszyna pochłania dużo zasobów hosta, co uwydatnia się tym bardziej,\r\n            gdy pojawia się potrzeba wirtualizacji kilku podobnych środowisk, z których\r\n            każde musi mieć oddzielnie instalowany cały system operacyjny. Im większa\r\n            skala, tym mniej optymalne zużycie zasobów i mniejsza wygoda przy instalacji\r\n            i konfiguracji środowisk.\r\n\r\n            <h3>Na czym polega konteneryzacja?</h3>\r\n            Konteneryzacja w uproszczeniu działa podobnie do wirtualizacji, trochę\r\n            jak jej lżejsza wersja. Różnia polega głównie na tworzeniu kontenerów\r\n            zamiast maszyn wirtualnych. Kontenery są lżejsze i wydajniejsze, ponieważ\r\n            współdzielą jądro Linuxa z system operacyjnym hosta (dlatego można je\r\n            uruchamiać tylko na Linuxach). Taki podział pozwala na dużą skalowalność,\r\n            ponieważ operuje się tutaj na dużo lżejszych paczkach, niż wirtualne\r\n            maszyny, co pozwala na łatwą rozbudowę całego potrzebnego ekosystemu.\r\n            Inną różnicą jest mniejsza izolacja, niż w przypadku maszyn wirtualnych,\r\n            co może być zarówno wadą (mniejsze bezpieczeństwo), jak i zaletą (kontenery\r\n            mogą się dzięki temu ze sobą komunikować, na co nie można sobie pozwolić\r\n            podczas użytkowania maszyn wirtualnych).\r\n\r\n            <h3>Czym jest Docker?</h3>\r\n            Docker jest platformą do uruchamiania kontenerów. Działa podobnie jak\r\n            hypervisor (hipernadzorca, np. VirtualBox) w przypadku maszyn wirtualnych,\r\n            w przeciwieństwie do którego nie musi jednak tworzyć wirtualnych systemów\r\n            operacyjnych. Jest to bardzo popularne rozwiązanie do konteneryzacji,\r\n            ale nie jedyne. Przykładem innej popularnej platformy tego typu jest\r\n            Kubernetes.\r\n        </article>\r\n        <br />\r\n    {:else if tabs[0].active}\r\n        <article class=\"content-area\">\r\n            <h2>1.2</h2>\r\n            <h3>Maszyny wirtualne</h3>\r\n            Poniższe animacje przedstawiają uproszczony schemat budowy maszyn wirtualnych\r\n            oraz kontenerów. Poniżej szare sześciany symbolizują maszyny wirtualne.\r\n            Ich rozmiar jest znaczący, ponieważ zawierają w sobie całe systemy operacyjne.\r\n            Wszystkie 3 maszyny wymagają nadal zewnętrznego hardware'u hosta oraz\r\n            platformy hipernadzorcy.\r\n\r\n            <div class=\"system\">\r\n                <div class=\"vm\"><VM /><VM /><VM /></div>\r\n                <div class=\"hyper\">Hypervisor (np. VirtualBox)</div>\r\n                <div class=\"os\">Infrastruktura (hardware)</div>\r\n            </div>\r\n\r\n            <h3>Kontenery</h3>\r\n            Kolejna wizualizacja dotyczy kontenerów serwowanych za pomoą platformy\r\n            Docker. Sam Docker zastępuje tutaj hipernadzorcę, a kontenery są znacząco\r\n            lżejsze/mniejsze (fioletowe sześciany), ponieważ nie instalują jądra\r\n            systemu. Zamiast tego wykorzystują system operacyjny hosta (a to oznacza\r\n            dodatkową warstwę po stronie środowiska hosta).\r\n\r\n            <div class=\"system\">\r\n                <div class=\"vm\"><Container /><Container /><Container /></div>\r\n                <div class=\"hyper\">Docker</div>\r\n                <div class=\"os\">System operacyjny</div>\r\n                <div class=\"os\">Infrastruktura (hardware)</div>\r\n            </div>\r\n        </article>\r\n        <br />\r\n    {/if}\r\n</section>\r\n\r\n<style>\r\n    .system {\r\n        width: 80%;\r\n        margin: 20px auto;\r\n    }\r\n    .vm {\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-bottom: 10px;\r\n    }\r\n\r\n    .hyper,\r\n    .os {\r\n        text-align: center;\r\n        margin: 6px;\r\n        padding: 5px;\r\n        border: 1px solid #3c6997;\r\n    }\r\n</style>\r\n","<script>\r\n    export let item;\r\n</script>\r\n\r\n<li>\r\n    <h2>{item.no}</h2>\r\n    <h3>{item.title}</h3>\r\n    <p>\r\n        {item.content}\r\n    </p>\r\n</li>\r\n\r\n<style>\r\n    li {\r\n        display: inline-block;\r\n        width: 20%;\r\n        min-width: 150px;\r\n        max-width: 230px;\r\n        padding: 80px 20px 40px;\r\n        position: relative;\r\n        vertical-align: top;\r\n        margin: 5px;\r\n        font-family: \"helvetica\", san-serif;\r\n        min-height: 25vh;\r\n        text-align: left;\r\n        border-radius: 10%;\r\n    }\r\n    li h2 {\r\n        font-size: 114px;\r\n        margin: 0;\r\n        position: absolute;\r\n        opacity: 0.2;\r\n        top: 50px;\r\n        right: 10px;\r\n        transition: all 0.3s ease-in-out;\r\n    }\r\n    li h3 {\r\n        font-size: 20px;\r\n        color: #3c6997;\r\n        margin-bottom: 5px;\r\n        padding: 10px;\r\n        box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\r\n            rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\r\n            rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\r\n    }\r\n    li p {\r\n        font-size: 16px;\r\n        line-height: 18px;\r\n        color: rgba(33, 82, 131, 0.801);\r\n        margin-top: 5px;\r\n    }\r\n    li:hover h2 {\r\n        top: 0px;\r\n        opacity: 0.6;\r\n    }\r\n\r\n    li:before {\r\n        content: \"\";\r\n        position: absolute;\r\n        top: -2px;\r\n        left: -2px;\r\n        right: -2px;\r\n        bottom: -2px;\r\n        z-index: -1;\r\n        transform: skew(2deg, 2deg);\r\n    }\r\n</style>\r\n","<script>\r\n    import ListItem from \"./ListItem.svelte\";\r\n    export let items;\r\n</script>\r\n\r\n<ul class=\"tilesWrap\">\r\n    {#each items as item}\r\n        <ListItem {item} />\r\n    {/each}\r\n</ul>\r\n\r\n<style>\r\n    .tilesWrap {\r\n        padding: 0;\r\n        margin: 20px auto;\r\n        list-style: none;\r\n        text-align: center;\r\n    }\r\n</style>\r\n","<script>\r\n    export let command;\r\n    export let output;\r\n</script>\r\n\r\n<section id=\"container\">\r\n    <div id=\"terminal\">\r\n        <!-- Terminal Bar -->\r\n        <section id=\"terminal__bar\">\r\n            <div id=\"bar__buttons\">\r\n                <button class=\"bar__button\" id=\"bar__button--exit\"\r\n                    >&#10005;</button\r\n                >\r\n                <button class=\"bar__button\">&#9472;</button>\r\n                <button class=\"bar__button\">&#9723;</button>\r\n            </div>\r\n            <p id=\"bar__user\">root@ubuntu: ~</p>\r\n        </section>\r\n        <!-- Terminal Body -->\r\n        <section id=\"terminal__body\">\r\n            <div id=\"terminal__prompt\">\r\n                <span id=\"terminal__prompt--user\">root@ubuntu:</span>\r\n                <span id=\"terminal__prompt--location\">~</span>\r\n                <span id=\"terminal__prompt--bling\">$</span>\r\n                <span id=\"terminal__prompt--cursor\" />\r\n                <input spellcheck=\"false\" bind:value={command} />\r\n            </div>\r\n            <div class=\"return\">\r\n                {#if output}\r\n                    {#if output[command]}\r\n                        {@html output[command]}\r\n                    {/if}\r\n                {/if}\r\n            </div>\r\n        </section>\r\n    </div>\r\n</section>\r\n\r\n<style>\r\n    @import url(\"https://fonts.googleapis.com/css?family=Ubuntu\");\r\n    @import url(\"https://fonts.googleapis.com/css?family=Ubuntu+Mono\");\r\n\r\n    input,\r\n    input:focus,\r\n    select:focus {\r\n        -webkit-appearance: none;\r\n        outline: none;\r\n        width: 80%;\r\n        border: 0;\r\n        font: inherit;\r\n        color: #fff;\r\n        padding: inherit;\r\n        background-color: inherit;\r\n    }\r\n\r\n    .return {\r\n        color: #fff;\r\n        margin-top: 20px;\r\n        margin-left: 10px;\r\n    }\r\n\r\n    #container {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        background: linear-gradient(45deg, #57003f 0%, #f57453 100%);\r\n        font-family: Ubuntu;\r\n        width: 70vw;\r\n        margin: auto;\r\n    }\r\n\r\n    #terminal {\r\n        width: 70vw;\r\n        height: 65vh;\r\n        box-shadow: 2px 4px 10px rgba(0, 0, 0, 0.5);\r\n    }\r\n\r\n    #terminal__bar {\r\n        display: flex;\r\n        width: 100%;\r\n        height: 30px;\r\n        align-items: center;\r\n        padding: 0 8px;\r\n        box-sizing: border-box;\r\n        border-top-left-radius: 5px;\r\n        border-top-right-radius: 5px;\r\n        background: linear-gradient(#504b45 0%, #3c3b37 100%);\r\n    }\r\n\r\n    #bar__buttons {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n\r\n    .bar__button {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        padding: 0;\r\n        margin-right: 5px;\r\n        font-size: 8px;\r\n        height: 12px;\r\n        width: 12px;\r\n        box-sizing: border-box;\r\n        border: none;\r\n        border-radius: 100%;\r\n        background: linear-gradient(#7d7871 0%, #595953 100%);\r\n        text-shadow: 0px 1px 0px rgba(255, 255, 255, 0.2);\r\n        box-shadow: 0px 0px 1px 0px #41403a, 0px 1px 1px 0px #474642;\r\n    }\r\n    .bar__button:hover {\r\n        cursor: pointer;\r\n    }\r\n    .bar__button:focus {\r\n        outline: none;\r\n    }\r\n    #bar__button--exit {\r\n        background: linear-gradient(#f37458 0%, #de4c12 100%);\r\n        background-clip: padding-box;\r\n    }\r\n\r\n    #bar__user {\r\n        color: #d5d0ce;\r\n        margin-left: 6px;\r\n        font-size: 14px;\r\n        line-height: 15px;\r\n    }\r\n\r\n    #terminal__body {\r\n        background: rgba(56, 4, 40, 0.9);\r\n        font-family: \"Ubuntu Mono\";\r\n        height: calc(100% - 30px);\r\n        padding-top: 2px;\r\n        margin-top: -1px;\r\n    }\r\n\r\n    #terminal__prompt {\r\n        display: flex;\r\n    }\r\n    #terminal__prompt--user {\r\n        color: #7eda28;\r\n    }\r\n    #terminal__prompt--location {\r\n        color: #4878c0;\r\n    }\r\n    #terminal__prompt--bling {\r\n        color: #dddddd;\r\n    }\r\n    #terminal__prompt--cursor {\r\n        display: block;\r\n        height: 17px;\r\n        width: 8px;\r\n        margin-left: 9px;\r\n        animation: blink 1200ms linear infinite;\r\n    }\r\n\r\n    @keyframes blink {\r\n        0% {\r\n            background: #ffffff;\r\n        }\r\n        49% {\r\n            background: #ffffff;\r\n        }\r\n        60% {\r\n            background: transparent;\r\n        }\r\n        99% {\r\n            background: transparent;\r\n        }\r\n        100% {\r\n            background: #ffffff;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 600px) {\r\n        #terminal {\r\n            max-height: 90%;\r\n            width: 90%;\r\n        }\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    import Navigation from \"../Navigation.svelte\";\r\n    import List from \"../List.svelte\";\r\n    import Terminal from \"../Terminal.svelte\";\r\n\r\n    export let switchers;\r\n\r\n    let tabs = [\r\n        { id: 2, active: false },\r\n        { id: 1, active: false },\r\n        { id: 0, active: true },\r\n    ];\r\n\r\n    const imageItems = [\r\n        {\r\n            no: 1,\r\n            title: \"docker image ls\",\r\n            content:\r\n                \"wyświetla listę obrazów, które znajdują się lokalnie na dysku, a więc których można użyć do budowy kontenerów\",\r\n        },\r\n        {\r\n            no: 2,\r\n            title: \"docker image inspect <id>\",\r\n            content: \"wyświetla szczegóły (w tym warstwy) wskazanego obrazu\",\r\n        },\r\n        {\r\n            no: 3,\r\n            title: \"docker images\",\r\n            content: \"działa identycznie, jak docker image ls\",\r\n        },\r\n    ];\r\n\r\n    const containerItems = [\r\n        {\r\n            no: 1,\r\n            title: \"docker container ls\",\r\n            content: \"wyświetla listę URUCHOMIONYCH kontenerów\",\r\n        },\r\n        {\r\n            no: 2,\r\n            title: \"docker container ls -a \",\r\n            content:\r\n                \"wyświetla wszystkie kontenery (w tym i te zatrzymane), które znajdują się lokalnie na dysku (a to skrót od all)\",\r\n        },\r\n        {\r\n            no: 3,\r\n            title: \"docker container inspect <id>\",\r\n            content:\r\n                \"podobnie jak w przypadku obrazów, wyświetla szczegóły dotyczące konkretnego kontenera\",\r\n        },\r\n        {\r\n            no: 4,\r\n            title: \"docker container logs <id>\",\r\n            content: \"wyświetla logi z działania wskazanego kontenera\",\r\n        },\r\n    ];\r\n\r\n    let command;\r\n    let output = {\r\n        \"docker images\": `<table><tr><th>REPOSITORY</th><th>IMAGE ID</th><th>SIZE</th></tr>\r\n            <tr><td>mongo</td><td>0bcbeb494bed</td><td>684MB</td></tr>\r\n            <tr><td>python</td><td>23a699b503e0</td><td>338MB</td></tr>\r\n            <tr><td>ubuntu</td><td>103a0101947e</td><td>28MB</td></tr></table>`,\r\n        \"docker image ls\": `<table><tr><th>REPOSITORY</th><th>IMAGE ID  </th><th>SIZE</th></tr>\r\n            <tr><td>mongo</td><td>0bcbeb494bed</td><td>684MB</td></tr>\r\n            <tr><td>python</td><td>23a699b503e0</td><td>338MB</td></tr>\r\n            <tr><td>ubuntu</td><td>103a0101947e</td><td>28MB</td></tr></table>`,\r\n        \"docker image inspect 2\": `Tutaj pojawiłaby się bardzo długa lista zawierająca wszelkie szczegóły  tego konketnego obrazu (jak pełne ID, data utworzenia, konfiguracja, czy warstwy, z których zbudowany jest obraz (o tym w rozdziale Dockerfile)).`,\r\n        \"docker container ls\": `<table><tr><th>CONTAINER ID  </th><th>IMAGE</th><th>NAMES</th></tr>\r\n            <tr><td>569c9ab333d3</td><td>python</td><td>applicaton1</td></tr>\r\n            <tr><td>569dedab27102</td><td>python</td><td>application2</td></tr></table>`,\r\n        \"docker container inspect 569c\": `Tutaj, podobnie jak w przypadku inspekcji obrazów, pojawiłaby się długa lista szczegółów. Ale na tym można tu zakończyć, zapraszam do rozdziału 3!`,\r\n    };\r\n</script>\r\n\r\n<Navigation bind:switchers bind:tabs />\r\n<section class=\"subbody\">\r\n    <h1>Rozdział 2</h1>\r\n    <h2>- Obraz vs kontener -</h2>\r\n\r\n    {#if tabs[2].active}\r\n        <article class=\"content-area\">\r\n            <h2>2.1</h2>\r\n\r\n            <h3>Czym jest obraz (image)?</h3>\r\n            Obraz to zapisany stan aplikacji i jego środowiska w danym momencie czasu\r\n            (można więc powiedzieć, że to migawka (snapshot) aplikacji). Jest niezmienny\r\n            (read-only) i nie można go bezpośrednio uruchomić. Zawiera kod źródłowy,\r\n            wszelkie potrzebne biblioteki i zależności, narzędzia i wszystkie inne\r\n            pliki potrzebne do zbudowania środowiska. Obrazy służą jako budulec do\r\n            budowania kontenerów, które to już są uruchamiane.\r\n            <br /><br />\r\n            Obraz składa się z warstw (kolejnych poleceń, o tym więcej w rozdziale\r\n            o Dockerfile). W uproszczeniu, podczas budowania obrazu następuje kopiowanie\r\n            wszystkich warstw i dołożenie warstwy konteneru (warstwy obrazu są tylko\r\n            do odczytu, podczas gdy warstwa konteneru jest modyfikowalna).\r\n\r\n            <h3>Czym jest kontener?</h3>\r\n            Kontener jest wirtualnym, izolowanym środowiskiem uruchomieniowym. Powstaje\r\n            jako kopia obrazu, można go uruchamiać. Kontenery można porównać do maszyn\r\n            wirtualnych, róznią się jednak tym, że w przypadku maszyn wirtualizacja\r\n            odbywa się na poziomie hardware'u, a w przypadku kontenerów na poziomie\r\n            aplikacji, co sprawia, że kontenery są znacznie lżejsze.\r\n\r\n            <h3>Relacja obrazów i kontenerów</h3>\r\n            Kontener jest budowany z obrazu. Z jednego obrazu można zbudować dowolnie\r\n            dużo kontenerów (ale jeden kontener jest budowany zawsze z jednego obrazu),\r\n            co umożliwia łatwe udostępnianie aplikacji oraz dużą skalowalność. Ich\r\n            relację można porówać do obiektowości - obraz jest w tym wypadku jak\r\n            klasa, a kontener jak obiekt stworzony na podstawie tej klasy.\r\n        </article>\r\n        <br />\r\n    {:else if tabs[1].active}\r\n        <article class=\"content-area\">\r\n            <h2>2.2</h2>\r\n\r\n            <h3>Komendy do przeglądu obrazów</h3>\r\n            <List items={imageItems} />\r\n\r\n            Wszystkie komendy dotyczące obrazów i kontenerów zaczynają się\r\n            zawsze od słowa kluczowego docker. W przypadku obrazów drugim słowem\r\n            kluczowym jest image (w liczbie pojedynczej, za wyjątkiem aliasu\r\n            images), potem trzecim słowem jest już konkretna komenda, np. ls\r\n            (skrót od list).\r\n\r\n            <h3>Komendy do przeglądania kontenerów</h3>\r\n            <List items={containerItems} />\r\n\r\n            Te komendy wyglądają podobnie, jak w przypadku obrazów. Główną\r\n            różnicą jest słowo kluczowe container, znowu w liczbie pojedynczej\r\n            (tym razem nie ma jednak aliasu w postaci komendy docker\r\n            containers).\r\n\r\n            <h3>Jak identyfikować obraz/kontener?</h3>\r\n            W komendach dotyczących konkretnych obrazów lub kontenerów trzeba podać\r\n            identyfikator. Można zrobić to na dwa sposoby. Pierwszym jest podanie\r\n            ich nazwy (po użyciu komend z ls nazwa obrazu znajduje się w kolumnie\r\n            REPOSITORY, a nazwa konteneru w kolumnie NAMES). Wygodniejszy może być\r\n            jednak drugi sposób, czyli podanie ID. O ile samo ID jest dość skomplikowane,\r\n            o tyle sprawa jest uproszczona, ponieważ wystarczy podać tylko jego pierwsze\r\n            litery (tyle, ile wystarczy, aby jednoznacznie określić obraz). Poniżej\r\n            3 przykładowe obrazy (określone nazwą i numerem ID):\r\n            <ul>\r\n                <li>python <strong>c</strong>2e9b18f0bca</li>\r\n                <li>ubuntu <strong>f34</strong>4fbea3f69</li>\r\n                <li>firefox <strong>f33</strong>9920cd560</li>\r\n            </ul>\r\n\r\n            Wytłuszczone zostały fragmentu ID, które wystarczą do identyfikacji\r\n            obrazu (a więc do przejrzenia warstw obrazu ubuntu należy użyć\r\n            polecenia docker image inspect f34). Ostatnie dwa ID wymagają\r\n            podania więcej znaków, ponieważ oba mają identyczne dwa pierwsze\r\n            znaki i ich podanie nie wystarczy, aby jednoznacznie sklasyfikować\r\n            obraz.\r\n        </article>\r\n        <br />\r\n    {:else if tabs[0].active}\r\n        <article class=\"content-area\">\r\n            <h2>2.3</h2>\r\n\r\n            <article class=\"instructions\">\r\n                {#if command == \"docker images\"}\r\n                    Bardzo dobrze, lista pokazuje 3 obrazy. Wszystkie mają ID\r\n                    rozpoczynajace się od innego znaku, więc już pierwszy znak\r\n                    będzie wystarczajacy w każdym wypadku, aby zidentyfikować\r\n                    konkretne obrazy. Przy użyciu polecenia docker image inspect\r\n                    id, wyświetl szczegóły dotyczące obrazu zawierającego\r\n                    pythona (pamiętaj, że w tym wypadku wystarczy tylko pierwszy\r\n                    znak ID).\r\n                {:else if command == \"docker image ls\"}\r\n                    Bardzo dobrze, lista pokazuje 3 obrazy. Wszystkie mają ID\r\n                    rozpoczynajace się od innego znaku, więc już pierwszy znak\r\n                    będzie wystarczajacy w każdym wypadku, aby zidentyfikować\r\n                    konkretne obrazy. Przy użyciu polecenia docker image inspect\r\n                    id, wyświetl szczegóły dotyczące obrazu zawierającego\r\n                    pythona (pamiętaj, że w tym wypadku wystarczy tylko pierwszy\r\n                    znak ID).\r\n                {:else if command == \"docker image inspect 2\"}\r\n                    Dobra robota. Teraz pora zerknąć na listę kontenerów (przyda\r\n                    się komenda docker container ls).\r\n                {:else if command == \"docker container ls\"}\r\n                    Tym razem lista zawiera 2 obiekty - są to kontenery o\r\n                    nazwach application1 oraz application2. Jak widać, oba\r\n                    zostały zbudowane z tego samego obrazu pythona. Używając\r\n                    komendy docker container inspect id sprawdź szczegóły\r\n                    pierwszego kontenera. Warto zwrócić uwagę, że w tym\r\n                    przykładzie powtarzają się aż 3 pierwsze znaki ID (569...),\r\n                    co oznacza, że do poprawnego zidentyfikowania kontenera,\r\n                    potrzeba aż 4 pierwszych znaków.\r\n                {:else if command == \"docker container inspect 569c\"}\r\n                    W tym miejscu kończy się rozdział 2.\r\n                {:else}\r\n                    W tym miejscu na bieżąco będą aktualizowane instrukcje. Aby\r\n                    wpisać komendę do konsoli, kliknij myszką na prawo od\r\n                    migającego kursora i zacznij pisać. Na początek warto\r\n                    wyświetlić listę obrazów używając komendy docker image ls\r\n                    albo docker images.\r\n                {/if}\r\n            </article>\r\n            <br /><br />\r\n            <Terminal bind:command {output} />\r\n        </article>\r\n        <br />\r\n    {/if}\r\n</section>\r\n\r\n<style>\r\n</style>\r\n","<script lang=\"ts\">\r\n    import Image from \"./Image.svelte\";\r\n    import Container from \"./Container.svelte\";\r\n\r\n    export let cubeType;\r\n    export let name;\r\n</script>\r\n\r\n<article>\r\n    {#if cubeType == \"image\"}\r\n        <Image />\r\n    {:else if cubeType == \"container\"}\r\n        <Container />\r\n    {/if}\r\n    {name}\r\n</article>\r\n\r\n<style>\r\n    article {\r\n        text-align: center;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    import Navigation from \"../Navigation.svelte\";\r\n    import CubeNamed from \"../CubeNamed.svelte\";\r\n    import List from \"../List.svelte\";\r\n    import Terminal from \"../Terminal.svelte\";\r\n\r\n    export let switchers;\r\n\r\n    let tabs = [\r\n        { id: 1, active: false },\r\n        { id: 0, active: true },\r\n    ];\r\n\r\n    const cubes = {\r\n        image: \"image\",\r\n        container: \"container\",\r\n    };\r\n\r\n    const hubItems = [\r\n        {\r\n            no: 1,\r\n            title: \"docker search <nazwa>\",\r\n            content:\r\n                \"Wyszukuje wszystkie obrazy o nazwie podobnej do <nazwa> w repozytorium Docker Hub.\",\r\n        },\r\n        {\r\n            no: 2,\r\n            title: \"docker pull obraz:tag\",\r\n            content: \"Pobiera na dysk wybrany obraz z Docker Huba.\",\r\n        },\r\n    ];\r\n\r\n    let command;\r\n    let output = {\r\n        \"docker search python\": `<table><tr><th>NAME</th><th>DESCRIPTION</th><th>OFFICIAL</th></tr>\r\n            <tr><td>python</td><td>Python is an interpeted language ...</td><td>[OK]</td></tr>\r\n            <tr><td>kaggle/python</td><td>Docker image for Python scripts run on Kaggle</td><td></td></tr></table>`,\r\n        \"docker pull python\": `Status: Downloaded newer image for python:latest`,\r\n        \"docker pull python:slim\": `Status: Downloaded newer image for python:slim`,\r\n        \"docker pull kaggle/python\": `Status: Downloaded newer image for kaggle/python:latest`,\r\n        \"docker image ls\": `<table><tr><th>REPOSITORY</th><th>TAG</th><th>IMAGE ID</th></tr>\r\n            <tr><td>python</td><td>latest</td><td>0bcbeb494bed</td></tr>\r\n            <tr><td>python</td><td>slim</td><td>23a699b503e0</td></tr>\r\n            <tr><td>kaggle/python</td><td>latest</td><td>103a0101947e</td></tr></table>`,\r\n    };\r\n</script>\r\n\r\n<Navigation bind:switchers bind:tabs />\r\n<section class=\"subbody\">\r\n    <h1>Rozdział 3</h1>\r\n    <h2>- Docker Hub -</h2>\r\n\r\n    {#if tabs[1].active}\r\n        <article class=\"content-area\">\r\n            <h2>3.1</h2>\r\n\r\n            <h3>Docker Hub - repozytorium obrazów</h3>\r\n            Aplikacje uruchamiane są w kontenerach (można zamiennie używać określenia\r\n            kontener i aplikacja), te za to budowane są z obrazów. Obrazy można tworzyć\r\n            samemu lub korzystać z tych, które są już opublikowane w internecie.\r\n            Najłatwiej znaleźć je na największym repozytorium obrazów dockerowych\r\n            - Docker Hubie. Przechowuje ono obrazy (wyłącznie, kontenerów tam nie\r\n            ma), tak samo, jak np. GitHub przechowuje kod. Z Docker Huba można skorzystać\r\n            z konsoli lub korzystając bezpośrednio ze strony:<a\r\n                href=\"https://hub.docker.com/\"\r\n                target=\"_blank\"\r\n            >\r\n                [link]</a\r\n            >.\r\n\r\n            <h3>Jak nazywane są obrazy?</h3>\r\n            Obrazy oficjalne (stworzone przez developerów Dockera w celu stanowienia\r\n            podstaw do budowy kolejnych obrazów, o tym w kolejnym rozdziale) mają\r\n            w nazwach po prostu nazwę usługi, którą zawierają (jak python, java,\r\n            ubuntu, redis, mysql, mongo itd). Obrazy opublikowane przez społeczność\r\n            są dwuczłonowe, z czego pierwszy człon to najczęściej (ale nie musi tak\r\n            być) nazwa użytkownika autora obrazu, a drugi człon to nazwa usługi (username/usługa).\r\n            <br /><br />\r\n            Ponadto używa się tagów w konwencji: username/usługa:tag. Tagi to konkretne\r\n            wersje obrazu, np. najnowszy (w momencie pisania poradnika) oficjalny\r\n            obraz pythona można uzyskać podając nastepującą nazwę i tag -> python:3.9.7.\r\n            Tagi nie muszą jednak oznaczać wersjonowania oprogramowania, np. obraz\r\n            python:slim oznacza pythona, który ma zainstalowaną minimalną liczbę\r\n            paczek, aby sam obraz był jak najlżejszy. Można spotkać również obraz\r\n            python:3.9.7-slim (3.9.7-slim to tag). Tag domyślny nazywa się latest,\r\n            jest wywoływany automatycznie, gdy nie poda się tagu (a więc obraz python\r\n            jest wczytywany automatycznie jako python:latest).\r\n\r\n            <h3>Jak pobrać obraz z chmury?</h3>\r\n            Najpierw można przeszukać repozytorium Docker Huba ręcznie w przeglądarce\r\n            lub w konsoli używajać polecenia search (np. docker search python wyszuka\r\n            wszystkie obrazy oficjalne i nieoficjalne, które mają podobne nazwy).\r\n            Następnie można pobrać wybrany obraz komendą pull (tutaj należy podać\r\n            już konkretną nazwę oraz tag).\r\n\r\n            <List items={hubItems} />\r\n        </article>\r\n        <br />\r\n    {:else if tabs[0].active}\r\n        <article class=\"content-area\">\r\n            <h2>3.2</h2>\r\n\r\n            <article class=\"instructions\">\r\n                {#if command == \"docker search python\"}\r\n                    W chmurze odnaleziono następujące obrazy:\r\n                    <article class=\"cubesList\">\r\n                        {#if 2}\r\n                            <CubeNamed cubeType={cubes.image} name={\"python\"} />\r\n                            <CubeNamed\r\n                                cubeType={cubes.image}\r\n                                name={\"kaggle/python\"}\r\n                            />\r\n                        {/if}\r\n                    </article>\r\n                    Można zauważyć, że pierwszy jest obrazem oficjalnym (stworzonym\r\n                    przez developerów Dockera), a drugi posiada człon z nazwą użytkownika/organizacji,\r\n                    więc pochodzi od społeczności. W obu przypadkach nie wyświetlamy\r\n                    tu jednak dostępnych tagów, które można sprawdzić na stronie\r\n                    internetowej Docker Huba. Spróbuj pobrać teraz oficjalny obraz\r\n                    pythona używajac komendy docker pull python.\r\n                {:else if command == \"docker pull python\"}\r\n                    Pobrany obraz zawsze ma tag. Przy jego braku, docker zakłada\r\n                    tag domyślny - latest (warto jedak pamiętać, że nazwa moze\r\n                    być myląca i wcale nie musi to być najnowsza wersja obrazu,\r\n                    to tylko tag domyślny, gdy nie nadano mu żadnego innego\r\n                    tagu):\r\n                    <article class=\"cubesList\">\r\n                        {#if 2}\r\n                            <CubeNamed\r\n                                cubeType={cubes.image}\r\n                                name={\"python:latest\"}\r\n                            />\r\n                        {/if}\r\n                    </article>\r\n                    Po sprawdzeniu tagów obrazu pythona w Docker Hub wiemy jednak,\r\n                    że jest tam m.in. tag slim. Spróbuj więc teraz pobrać inną wersję\r\n                    tego samego obrazu (przyda się komenda docker pull python:slim).\r\n                {:else if command == \"docker pull python:slim\"}\r\n                    Teraz posiadasz na dysku już dwa obrazy (a konkretniej dwie\r\n                    wersje tego samego obrazu):\r\n                    <article class=\"cubesList\">\r\n                        {#if 2}\r\n                            <CubeNamed\r\n                                cubeType={cubes.image}\r\n                                name={\"python:latest\"}\r\n                            />\r\n                            <CubeNamed\r\n                                cubeType={cubes.image}\r\n                                name={\"python:slim\"}\r\n                            />\r\n                        {/if}\r\n                    </article>\r\n                    Teraz spróbuj pobrac nieoficjalny obraz pythona z kaggle. Według\r\n                    strony internetowej ma on tylko jeden tag (domyślny latest),\r\n                    więc przy pobieraniu nie trzeba podawać żadnego tagu (docker\r\n                    pull kaggle/python).\r\n                {:else if command == \"docker pull kaggle/python\"}\r\n                    Dobra robota. Na koniec wyświetl wszystkie obrazy, które\r\n                    znajdują się lokalnie na dysku przy pomocy komendy docker\r\n                    image ls.\r\n                {:else if command == \"docker image ls\"}\r\n                    Na dysku znajdują się poniższe obrazy (lista również w\r\n                    terminalu). Przejdź do następnego rozdziału.\r\n                    <article class=\"cubesList\">\r\n                        {#if 2}\r\n                            <CubeNamed\r\n                                cubeType={cubes.image}\r\n                                name={\"python:latest\"}\r\n                            />\r\n                            <CubeNamed\r\n                                cubeType={cubes.image}\r\n                                name={\"python:slim\"}\r\n                            />\r\n                            <CubeNamed\r\n                                cubeType={cubes.image}\r\n                                name={\"kaggle/python:latest\"}\r\n                            />\r\n                        {/if}\r\n                    </article>\r\n                {:else}\r\n                    Za pomocą terminala spróbuj odnaleźć w Docker Hubie obrazy z\r\n                    pythonem (może się przydać polecenie docker search python).\r\n                {/if}\r\n            </article>\r\n\r\n            <Terminal bind:command {output} />\r\n        </article>\r\n        <br />\r\n    {/if}\r\n</section>\r\n\r\n<style>\r\n</style>\r\n","<script lang=\"ts\">\r\n    export let code;\r\n</script>\r\n\r\n<section class=\"editor\">\r\n    <div class=\"browser-mockup\">\r\n        {@html code}\r\n    </div>\r\n</section>\r\n\r\n<style>\r\n    .browser-mockup {\r\n        border-top: 2em solid rgba(230, 230, 230, 0.7);\r\n        box-shadow: 0 0.1em 1em 0 rgba(0, 0, 0, 0.4);\r\n        position: relative;\r\n        border-radius: 3px 3px 0 0;\r\n        color: white;\r\n        background-color: #1e1e1e;\r\n        padding: 5px;\r\n    }\r\n\r\n    .browser-mockup:before {\r\n        display: block;\r\n        position: absolute;\r\n        content: \"\";\r\n        top: -1.25em;\r\n        left: 1em;\r\n        width: 0.5em;\r\n        height: 0.5em;\r\n        border-radius: 50%;\r\n        background-color: #f44;\r\n        box-shadow: 0 0 0 2px #f44, 1.5em 0 0 2px #9b3, 3em 0 0 2px #fb5;\r\n    }\r\n\r\n    .browser-mockup > * {\r\n        /* display: block; */\r\n    }\r\n\r\n    .browser-mockup {\r\n        margin: 2em;\r\n        flex: 1;\r\n    }\r\n\r\n    .docker {\r\n        color: #008afa;\r\n    }\r\n</style>\r\n","<script>\r\n</script>\r\n\r\n<div class=\"cloud\"><span style=\"z-index: 10000;\">DockerHub</span></div>\r\n\r\n<style>\r\n    .cloud {\r\n        width: 350px;\r\n        height: 120px;\r\n        text-align: center;\r\n        background: #f2f9fe;\r\n        background: linear-gradient(top, #f2f9fe 5%, #d6f0fd 100%);\r\n        background: -webkit-linear-gradient(top, #f2f9fe 5%, #d6f0fd 100%);\r\n        background: -moz-linear-gradient(top, #f2f9fe 5%, #d6f0fd 100%);\r\n        background: -ms-linear-gradient(top, #f2f9fe 5%, #d6f0fd 100%);\r\n        background: -o-linear-gradient(top, #f2f9fe 5%, #d6f0fd 100%);\r\n\r\n        border-radius: 100px;\r\n        -webkit-border-radius: 100px;\r\n        -moz-border-radius: 100px;\r\n\r\n        position: relative;\r\n        margin: 120px auto 20px;\r\n    }\r\n\r\n    .cloud:after,\r\n    .cloud:before {\r\n        content: \"\";\r\n        position: absolute;\r\n        background: #f2f9fe;\r\n        z-index: 1;\r\n    }\r\n\r\n    .cloud:after {\r\n        width: 100px;\r\n        height: 100px;\r\n        top: -50px;\r\n        left: 50px;\r\n\r\n        border-radius: 100px;\r\n        -webkit-border-radius: 100px;\r\n        -moz-border-radius: 100px;\r\n    }\r\n\r\n    .cloud:before {\r\n        width: 180px;\r\n        height: 180px;\r\n        top: -90px;\r\n        right: 50px;\r\n        border-radius: 200px;\r\n        -webkit-border-radius: 200px;\r\n        -moz-border-radius: 200px;\r\n    }\r\n</style>\r\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { writable } from '../store/index.mjs';\nimport { now, loop, assign } from '../internal/index.mjs';\nimport { linear } from '../easing/index.mjs';\n\nfunction is_date(obj) {\n    return Object.prototype.toString.call(obj) === '[object Date]';\n}\n\nfunction tick_spring(ctx, last_value, current_value, target_value) {\n    if (typeof current_value === 'number' || is_date(current_value)) {\n        // @ts-ignore\n        const delta = target_value - current_value;\n        // @ts-ignore\n        const velocity = (current_value - last_value) / (ctx.dt || 1 / 60); // guard div by 0\n        const spring = ctx.opts.stiffness * delta;\n        const damper = ctx.opts.damping * velocity;\n        const acceleration = (spring - damper) * ctx.inv_mass;\n        const d = (velocity + acceleration) * ctx.dt;\n        if (Math.abs(d) < ctx.opts.precision && Math.abs(delta) < ctx.opts.precision) {\n            return target_value; // settled\n        }\n        else {\n            ctx.settled = false; // signal loop to keep ticking\n            // @ts-ignore\n            return is_date(current_value) ?\n                new Date(current_value.getTime() + d) : current_value + d;\n        }\n    }\n    else if (Array.isArray(current_value)) {\n        // @ts-ignore\n        return current_value.map((_, i) => tick_spring(ctx, last_value[i], current_value[i], target_value[i]));\n    }\n    else if (typeof current_value === 'object') {\n        const next_value = {};\n        for (const k in current_value) {\n            // @ts-ignore\n            next_value[k] = tick_spring(ctx, last_value[k], current_value[k], target_value[k]);\n        }\n        // @ts-ignore\n        return next_value;\n    }\n    else {\n        throw new Error(`Cannot spring ${typeof current_value} values`);\n    }\n}\nfunction spring(value, opts = {}) {\n    const store = writable(value);\n    const { stiffness = 0.15, damping = 0.8, precision = 0.01 } = opts;\n    let last_time;\n    let task;\n    let current_token;\n    let last_value = value;\n    let target_value = value;\n    let inv_mass = 1;\n    let inv_mass_recovery_rate = 0;\n    let cancel_task = false;\n    function set(new_value, opts = {}) {\n        target_value = new_value;\n        const token = current_token = {};\n        if (value == null || opts.hard || (spring.stiffness >= 1 && spring.damping >= 1)) {\n            cancel_task = true; // cancel any running animation\n            last_time = now();\n            last_value = new_value;\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        else if (opts.soft) {\n            const rate = opts.soft === true ? .5 : +opts.soft;\n            inv_mass_recovery_rate = 1 / (rate * 60);\n            inv_mass = 0; // infinite mass, unaffected by spring forces\n        }\n        if (!task) {\n            last_time = now();\n            cancel_task = false;\n            task = loop(now => {\n                if (cancel_task) {\n                    cancel_task = false;\n                    task = null;\n                    return false;\n                }\n                inv_mass = Math.min(inv_mass + inv_mass_recovery_rate, 1);\n                const ctx = {\n                    inv_mass,\n                    opts: spring,\n                    settled: true,\n                    dt: (now - last_time) * 60 / 1000\n                };\n                const next_value = tick_spring(ctx, last_value, value, target_value);\n                last_time = now;\n                last_value = value;\n                store.set(value = next_value);\n                if (ctx.settled) {\n                    task = null;\n                }\n                return !ctx.settled;\n            });\n        }\n        return new Promise(fulfil => {\n            task.promise.then(() => {\n                if (token === current_token)\n                    fulfil();\n            });\n        });\n    }\n    const spring = {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe,\n        stiffness,\n        damping,\n        precision\n    };\n    return spring;\n}\n\nfunction get_interpolator(a, b) {\n    if (a === b || a !== a)\n        return () => a;\n    const type = typeof a;\n    if (type !== typeof b || Array.isArray(a) !== Array.isArray(b)) {\n        throw new Error('Cannot interpolate values of different type');\n    }\n    if (Array.isArray(a)) {\n        const arr = b.map((bi, i) => {\n            return get_interpolator(a[i], bi);\n        });\n        return t => arr.map(fn => fn(t));\n    }\n    if (type === 'object') {\n        if (!a || !b)\n            throw new Error('Object cannot be null');\n        if (is_date(a) && is_date(b)) {\n            a = a.getTime();\n            b = b.getTime();\n            const delta = b - a;\n            return t => new Date(a + t * delta);\n        }\n        const keys = Object.keys(b);\n        const interpolators = {};\n        keys.forEach(key => {\n            interpolators[key] = get_interpolator(a[key], b[key]);\n        });\n        return t => {\n            const result = {};\n            keys.forEach(key => {\n                result[key] = interpolators[key](t);\n            });\n            return result;\n        };\n    }\n    if (type === 'number') {\n        const delta = b - a;\n        return t => a + t * delta;\n    }\n    throw new Error(`Cannot interpolate ${type} values`);\n}\nfunction tweened(value, defaults = {}) {\n    const store = writable(value);\n    let task;\n    let target_value = value;\n    function set(new_value, opts) {\n        if (value == null) {\n            store.set(value = new_value);\n            return Promise.resolve();\n        }\n        target_value = new_value;\n        let previous_task = task;\n        let started = false;\n        let { delay = 0, duration = 400, easing = linear, interpolate = get_interpolator } = assign(assign({}, defaults), opts);\n        if (duration === 0) {\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        const start = now() + delay;\n        let fn;\n        task = loop(now => {\n            if (now < start)\n                return true;\n            if (!started) {\n                fn = interpolate(value, new_value);\n                if (typeof duration === 'function')\n                    duration = duration(value, new_value);\n                started = true;\n            }\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            const elapsed = now - start;\n            if (elapsed > duration) {\n                store.set(value = new_value);\n                return false;\n            }\n            // @ts-ignore\n            store.set(value = fn(easing(elapsed / duration)));\n            return true;\n        });\n        return task.promise;\n    }\n    return {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe\n    };\n}\n\nexport { spring, tweened };\n","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    let len = node.getTotalLength();\n    const style = getComputedStyle(node);\n    if (style.strokeLinecap !== 'butt') {\n        len += parseInt(style.strokeWidth);\n    }\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","import { spring } from 'svelte/motion';\nimport { crossfade } from 'svelte/transition';\nimport { quintOut, elasticOut } from 'svelte/easing';\nconst [send, receive] = crossfade({\n    duration: d => 600,\n    easing: elasticOut,\n    fallback(node, params) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        return {\n            duration: 600,\n            easing: quintOut,\n            css: t => `\r\n        transform: ${transform} scale(${t});\r\n        opacity: ${t}\r\n      `\n        };\n    }\n});\nlet dropTarget;\nfunction draggable(node, params) {\n    let lastX;\n    let lastY;\n    let startRect;\n    let offsetX = 0;\n    let offsetY = 0;\n    const offset = spring({ x: offsetX, y: offsetY }, {\n        stiffness: 0.2,\n        damping: 0.4\n    });\n    offset.subscribe(offset => {\n        node.style.left = offset.x + 'px';\n        node.style.top = offset.y + 'px';\n    });\n    node.addEventListener('mousedown', handleMousedown);\n    function handleMousedown(event) {\n        event.preventDefault();\n        lastX = event.clientX;\n        lastY = event.clientY;\n        if (!startRect)\n            startRect = node.getBoundingClientRect();\n        node.classList.add('dragged');\n        node.dispatchEvent(new CustomEvent('dragstart', {\n            detail: { lastX, lastY }\n        }));\n        window.addEventListener('mousemove', handleMousemove);\n        window.addEventListener('mouseup', handleMouseup);\n    }\n    function handleMousemove(event) {\n        const dx = event.clientX - lastX;\n        const dy = event.clientY - lastY;\n        offsetX += dx;\n        offsetY += dy;\n        lastX = event.clientX;\n        lastY = event.clientY;\n        const rect = node.getBoundingClientRect();\n        const midX = rect.x + rect.width / 2;\n        const midY = rect.y + rect.height / 2;\n        if (dropTarget)\n            dropTarget.classList.remove('droptarget');\n        dropTarget = null;\n        const candidate = document.elementFromPoint(midX, midY);\n        params.targets.map(t => { if (candidate.matches(t))\n            dropTarget = candidate; });\n        if (dropTarget)\n            dropTarget.classList.add('droptarget');\n        offset.set({ x: offsetX + dx, y: offsetY });\n        node.dispatchEvent(new CustomEvent('drag', {\n            detail: { lastX, lastY, dx, dy }\n        }));\n    }\n    function handleMouseup(event) {\n        if (dropTarget) {\n            dropTarget.classList.remove('droptarget');\n            // const targetRect = dropTarget.getBoundingClientRect()\n            // offsetX = targetRect.x - startRect.x\n            // offsetY = targetRect.y - startRect.y \n        }\n        else {\n            offsetX = 0;\n            offsetY = 0;\n        }\n        node.classList.remove('dragged');\n        lastX = event.clientX;\n        lastY = event.clientY;\n        offset.set({ x: offsetX, y: offsetY });\n        node.dispatchEvent(new CustomEvent('dragend', {\n            detail: { dropTarget, lastX, lastY }\n        }));\n        if (dropTarget) {\n            dropTarget.dispatchEvent(new CustomEvent('dropped', {\n                detail: params.data\n            }));\n        }\n        dropTarget = null;\n        window.removeEventListener('mousemove', handleMousemove);\n        window.removeEventListener('mouseup', handleMouseup);\n    }\n    return {\n        destroy() {\n            node.removeEventListener('mousedown', handleMousedown);\n        }\n    };\n}\nexport { draggable };\n","import { cubicOut } from '../easing/index.mjs';\nimport { is_function } from '../internal/index.mjs';\n\nfunction flip(node, { from, to }, params = {}) {\n    const style = getComputedStyle(node);\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const [ox, oy] = style.transformOrigin.split(' ').map(parseFloat);\n    const dx = (from.left + from.width * ox / to.width) - (to.left + ox);\n    const dy = (from.top + from.height * oy / to.height) - (to.top + oy);\n    const { delay = 0, duration = (d) => Math.sqrt(d) * 120, easing = cubicOut } = params;\n    return {\n        delay,\n        duration: is_function(duration) ? duration(Math.sqrt(dx * dx + dy * dy)) : duration,\n        easing,\n        css: (t, u) => {\n            const x = u * dx;\n            const y = u * dy;\n            const sx = t + u * from.width / to.width;\n            const sy = t + u * from.height / to.height;\n            return `transform: ${transform} translate(${x}px, ${y}px) scale(${sx}, ${sy});`;\n        }\n    };\n}\n\nexport { flip };\n","<script>\r\n    import { draggable } from \"../dragdrop.js\";\r\n    import { crossfade } from \"svelte/transition\";\r\n    import { quintOut, elasticOut } from \"svelte/easing\";\r\n    import { flip } from \"svelte/animate\";\r\n\r\n    const shelf = [null, null, null, null];\r\n    const cart = [\r\n        { id: 5, name: \"FROM python:slim\" },\r\n        { id: 4, name: \"CMD python src/main.py\" },\r\n        { id: 3, name: \"COPY /src .\" },\r\n        { id: 2, name: \"RUN pip -r install /src/req.txt\" },\r\n    ];\r\n\r\n    function putInShelf(item, index) {\r\n        const oldItem = shelf[index];\r\n        const oldShelfIndex = shelf.indexOf(item);\r\n        if (cart.indexOf(item) !== -1) cart.splice(cart.indexOf(item), 1);\r\n        if (oldShelfIndex !== -1) shelf[oldShelfIndex] = oldItem;\r\n        else if (oldItem) cart.push(oldItem);\r\n        shelf[index] = item;\r\n        cart = cart;\r\n    }\r\n\r\n    function putInCart(item) {\r\n        if (cart.indexOf(item) !== -1) cart.splice(cart.indexOf(item), 1);\r\n        if (shelf.indexOf(item) !== -1) shelf[shelf.indexOf(item)] = null;\r\n        cart.push(item);\r\n        cart = cart;\r\n    }\r\n\r\n    const [send, receive] = crossfade({\r\n        duration: (d) => 600,\r\n        easing: elasticOut,\r\n        fallback(node, params) {\r\n            const style = getComputedStyle(node);\r\n            const transform = style.transform === \"none\" ? \"\" : style.transform;\r\n\r\n            return {\r\n                duration: 600,\r\n                easing: quintOut,\r\n                css: (t) => `\r\n            transform: ${transform} scale(${t});\r\n            opacity: ${t}\r\n          `,\r\n            };\r\n        },\r\n    });\r\n</script>\r\n\r\nObraz\r\n<div class=\"shelf\">\r\n    {#each shelf as item, index}\r\n        <div class=\"slot\" on:dropped={(e) => putInShelf(e.detail, index)}>\r\n            {#if item}\r\n                {#each [item] as item (item.id)}\r\n                    <div\r\n                        class=\"item\"\r\n                        use:draggable={{\r\n                            data: item,\r\n                            targets: [\".cart\", \".slot\", \".slot .item\"],\r\n                        }}\r\n                        in:receive={item.id}\r\n                        out:send={item.id}\r\n                        on:dropped={(e) => putInShelf(e.detail, index)}\r\n                    >\r\n                        {item.name}\r\n                    </div>\r\n                {/each}\r\n            {/if}\r\n        </div>\r\n    {/each}\r\n</div>\r\nWarstwy z Dockerfile\r\n<div class=\"cart\" on:dropped={(e) => putInCart(e.detail)}>\r\n    {#each cart as item, index (item.id)}\r\n        <div\r\n            class=\"item\"\r\n            animate:flip\r\n            use:draggable={{ data: item, targets: [\".slot\", \".slot .item\"] }}\r\n            in:receive={item.id}\r\n            out:send={item.id}\r\n        >\r\n            {item.name}\r\n        </div>\r\n    {/each}\r\n</div>\r\n\r\n<style>\r\n    .slot {\r\n        position: relative;\r\n        display: inline-block;\r\n        background: #eee;\r\n        box-shadow: 5px 5px 10px -10px black inset;\r\n        width: 250px;\r\n        height: 64px;\r\n        margin: 3px;\r\n        vertical-align: top;\r\n    }\r\n    .cart {\r\n        position: relative;\r\n        background: #eee;\r\n        box-shadow: 5px 5px 10px -10px black inset;\r\n        min-height: 64px;\r\n    }\r\n    .item {\r\n        height: 56px;\r\n        width: 240px;\r\n        position: relative;\r\n        display: inline-block;\r\n        background: rgba(255, 255, 255, 0.5);\r\n        margin: 4px;\r\n        box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.2);\r\n    }\r\n    .slot .item {\r\n        position: absolute;\r\n    }\r\n    :global(.dragged) {\r\n        pointer-events: none;\r\n        z-index: 100;\r\n    }\r\n    :global(.slot.droptarget, .cart.droptarget) {\r\n        background: #ddd;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    import Navigation from \"../Navigation.svelte\";\r\n    import CubeNamed from \"../CubeNamed.svelte\";\r\n    import List from \"../List.svelte\";\r\n    import Editor from \"../Editor.svelte\";\r\n    import Cloud from \"../Cloud.svelte\";\r\n    import DragDrop from \"../DragDrop.svelte\";\r\n\r\n    export let switchers;\r\n\r\n    const cubes = {\r\n        image: \"image\",\r\n        container: \"container\",\r\n    };\r\n\r\n    let tabs = [\r\n        { id: 3, active: false },\r\n        { id: 2, active: false },\r\n        { id: 1, active: false },\r\n        { id: 0, active: true },\r\n    ];\r\n\r\n    const code = `<span style=\"color: #008afa;\">FROM</span> python:3.9.7 <br /><br>\r\n        <span style=\"color: #008afa;\">COPY</span> ./requirements.txt /app/requirements.txt <br />\r\n        <span style=\"color: #008afa;\">RUN</span> pip install -r /app/requirements.txt <br />\r\n        <span style=\"color: #008afa;\">COPY</span> ./src /app/src <br /><br>\r\n        <span style=\"color: #008afa;\">CMD</span> python app/src/main.py <br />`;\r\n\r\n    const codeBackend = `<span style=\"color: #707070;\"># ./backend/Dockerfile</span><br /><br>\r\n    <span style=\"color: #008afa;\">FROM</span> tiangolo/uvicorn-gunicorn-fastapi:latest <br /><br>\r\n        <span style=\"color: #008afa;\">COPY</span> ./requirements.txt /app/requirements.txt <br />\r\n        <span style=\"color: #008afa;\">RUN</span> pip install -r /app/requirements.txt <br />\r\n        <span style=\"color: #008afa;\">COPY</span> ./src /app/src <br /><br>\r\n        <span style=\"color: #008afa;\">CMD</span> uvicorn run:app --host 0.0.0.0 --port 80 <br />`;\r\n\r\n    const codeFrontend = `<span style=\"color: #707070;\"># ./frontend/Dockerfile</span><br /><br>\r\n    <span style=\"color: #008afa;\">FROM</span> node:current-alpine <br /><br>\r\n    <span style=\"color: #008afa;\">COPY</span> package*.json . <br />\r\n    <span style=\"color: #008afa;\">RUN</span> npm install <br />\r\n    <span style=\"color: #008afa;\">COPY</span> /src ./src <br /><br>\r\n    <span style=\"color: #008afa;\">CMD</span> npm run dev <br />`;\r\n\r\n    const runItems = [\r\n        {\r\n            no: 1,\r\n            title: \"docker build -t nazwa ścieżka\",\r\n            content:\r\n                \"Buduje obraz z Dockerfile (-t nazwa określa nazwę obrazu, ściezka to ścieżka do Dockerfile, jeśli uruchamiamy komendę z tej samej lokalizacji, co Dockerfile, wystarczy podać kropkę, np. 'docker build -t user/my_python .' .\",\r\n        },\r\n        {\r\n            no: 2,\r\n            title: \"docker run nazwa_obrazu\",\r\n            content:\r\n                \"Uruchamia kontener z obrazu (którego nazwę podajemy), można dodać parametr --name, by podać własną nazwę kontenera, inaczej Docker wygeneruje losową.\",\r\n        },\r\n    ];\r\n\r\n    let visibility = {\r\n        im1: false,\r\n        im2: false,\r\n        im3: false,\r\n        im4: false,\r\n        co1: false,\r\n        co2: false,\r\n        co3: false,\r\n        co4: false,\r\n    };\r\n\r\n    function showCube(id) {\r\n        visibility[id] = true;\r\n    }\r\n</script>\r\n\r\n<Navigation bind:switchers bind:tabs />\r\n<section class=\"subbody\">\r\n    <h1>Rozdział 4</h1>\r\n    <h2>- Dockerfile -</h2>\r\n\r\n    {#if tabs[3].active}\r\n        <article class=\"content-area\">\r\n            <h2>4.1</h2>\r\n            <h3>Dockerfile</h3>\r\n\r\n            Obrazy można pozyskiwać z Docker Huba, ale również można zbudować\r\n            własne. Instrukcje do zbudowania obrazu zapisuje się w plikach o\r\n            nazwie Dockerfile (nie mają one rozszerzeń). Załóżmy przykładową\r\n            strukturę projektu: katalog src (a w nim skrypty pythona, czyli\r\n            pliki z rozszerzeniem py), plik Dockerfile oraz plik\r\n            requirements.txt (zawierający listę bibliotek do pythona, które\r\n            chcemy zainstalować na użytek projektu). Plik Dockerfile składa się\r\n            z kolejnych instrukcji, przykładowo takich, jak poniżej. Warto tylko\r\n            najpierw zaznaczyć, że to jest tylko \"przepis\" na obraz. Większość\r\n            instrukcji zostanie uruchomiona przy budowaniu obrazu, za wyjątkiem\r\n            ostatniej, która uruchamia się dopiero, gdy z obrazu uruchamiany\r\n            jest kontener.\r\n            <br /><br />\r\n            <section class=\"dockerfile\">\r\n                <Editor {code} />\r\n                <aside>\r\n                    <list\r\n                        ><li>\r\n                            <strong>FROM</strong> - to powinna być zawsze pierwsza\r\n                            instrukcja w Dockerfile, określa obraz bazowy, na podstawie\r\n                            którego zostanie zbudowany nowy obraz (coś musi być pierwsze,\r\n                            dlatego własnie developerzy Dockera stworzyli obrazy\r\n                            oficjalne, można jednak jako obrazów bazowych używać\r\n                            dowolnych obrazów nieoficjalnych). W tym przykładzie\r\n                            używamy obrazy python o tagu 3.9.7. Obraz ten zawiera\r\n                            całe linuxowe środowisko z zainstalowanym pythonem oraz\r\n                            potrzebnymi do jego funkcjonowania bibliotekami (oraz\r\n                            narzędziami, jak pip). Od tego momentu powstaje wirtualne\r\n                            środowisko i wszystkie kolejne instrukcje będą wywoływane\r\n                            wewnątrz niego, a nie w systemie hosta.\r\n                        </li>\r\n                        <li>\r\n                            <strong>COPY</strong> - kopiuje potrzebne pliki do wirtualnego\r\n                            środowiska, pierwszym argumentem jest ścieżka do plików\r\n                            w systemie hosta (./requirements oraz ./src -> kropka\r\n                            oznacza katalog, gdzie aktualnie się znajdujemy, w tym\r\n                            wypadku, w którym znajduje się plik Dockerfile, bo z\r\n                            niego wywoływane sa instrukcje; katalog src oraz plik\r\n                            requirements.txt znajdują się w tym samym katalogu, co\r\n                            Dockerfile), a drugim ścieżka wewnątrz przyszłego kontenera/wirtualnego\r\n                            środowiska (w tym wypadku podajac ściezkę /app/... tworzymy\r\n                            jednocześnie w środku katalog /app i do niego kopiujemy\r\n                            wszystkie potrzebne pliki)\r\n                        </li>\r\n                        <li>\r\n                            <strong>RUN</strong> - uruchamia komendę w konsoli wewnątrz\r\n                            wirtualnego środowiska (w tym wypadku używamy narzędzia\r\n                            pip do instalacji potrzebnych bibliotek do pythona ze\r\n                            skopiowanego wcześniej pliku requirements.txt)\r\n                        </li>\r\n                        <li>\r\n                            <strong>CMD</strong> - (skrót od Command) działa podobnie\r\n                            do RUN, za wyjątkiem tego, że RUN można uruchomić wielokrotnie,\r\n                            a CMD powinno być użyte raz, na końcu. Dzieje się tak,\r\n                            ponieważ RUN uruchamia komendy w trakcie budowy obrazu,\r\n                            a CMD uruchamia się dopiero przy uruchamianiu kontenera\r\n                            z tego obrazu. W tym przykładzie następuje wywołanie\r\n                            skryptu main.py, który to znajduje się w skopiowanym\r\n                            wcześniej katalogu src. Tutaj więc powinien zostać uruchomiony\r\n                            główny program aplikacji bądź proces podtrzymujący serwer.\r\n                        </li></list\r\n                    >\r\n                </aside>\r\n            </section>\r\n            <br /><br />\r\n            W skrócie powyższy Dockerfile to instrukcja do stworzenia nowego obrazu\r\n            na podstawie obrazu python:3.9.7, która zakłada skopiowanie wszystkich\r\n            potrzebnych plików do środka wirtualnego środowiska, zainstalowanie potrzebnych\r\n            bibliotek oraz uruchomienie pliku main.py, który to powinien być głównym\r\n            programem.\r\n\r\n            <h3>Warstwy obrazu</h3>\r\n            Obrazy zazwyczaj potrafią się budować dosyć długo. Dzieje się tak, ponieważ\r\n            pod spodem mają najczęściej systemy linux (ale bez jądra systemowego,\r\n            bo na tym opiera się konteneryzacja, że jest wykorzystywane jądro systemu\r\n            hosta) i np. obraz python:3.9.7 różni się od obrazu mongo:latest tym,\r\n            że pierwszy posiada system (np. Ubuntu) z zainstalowanym oprogramowaniem\r\n            pythona, a drugi może mieć ten sam system, ale z oprogramowaniem do uruchomienia\r\n            bazy danych mongodb. Oczywiście można stworzyć obraz na podstawie obrazu\r\n            mongo i przy uzyciu instrukcji RUN zainstalować w środku pythona, ale\r\n            byłobby to bardzo nieoptymalne rozwiązanie, ponieważ później cała aplikacja\r\n            mieściłaby się w jednym kontenerze. Lepiej przygotować oddzielny obraz\r\n            (a w konsekwencji kontener) na program w pythonie i oddzielny na bazę\r\n            danych, po czym oba kontenery ze sobą połączyć (o tym w kolejnych rozdziałąch).\r\n\r\n            <br /><br />\r\n            Jeśli chcemy zmienić coś w Dockerfile, to będzie to wymagało ponownego\r\n            zbudowania obrazu. Tutaj jednak przychodzą z pomocą warstwy. Dockerfile\r\n            w trakcie budowy obrazu dokłada do niego kolejne instrukcje, które są\r\n            warstwami (a więc najpierw obraz powstaje z jedną warstwą - FROM, potem\r\n            w powyższym przykładzie są dodawane warstwy COPY, RUN, COPY i CMD). Jeśli\r\n            zmienimy jedno z poleceń (lub dodamy nowe), zostanie nadpisana tylko\r\n            warstwa zmieniona oraz wszystkie, które były dołożone po niej. Oznacza\r\n            to, że modyfikacje obrazu ładują się szybciej (chyba, że modyfikujemy\r\n            warstwę FROM, wtedy i tak cały obraz musi się zbudować od zera).\r\n        </article>\r\n        <br />\r\n    {:else if tabs[2].active}\r\n        <article class=\"content-area\">\r\n            <h2>4.2</h2>\r\n\r\n            <h3>Jakich komend użyć?</h3>\r\n            Najpierw należy zbudować obraz z pliku Dockerfile, a następnie uruchomić\r\n            kontener z obrazu.\r\n\r\n            <List items={runItems} />\r\n\r\n            Kontener zostaje utworzony przy pierwszym uruchomieniu (docker run),\r\n            jednak potem można go zamknąć i przechowywać, tak jak obraz.\r\n            Wyłączony kontener będzie miał status exited, a działający running.\r\n\r\n            <h3>Jak powstaje obraz i kontener</h3>\r\n            Są dwie ścieżki, aby otrzymać kontener (czyli działającą aplikację):\r\n            <ol>\r\n                <li>\r\n                    DockerHub --(docker pull)--> Obraz na dysku --(docker\r\n                    run)--> Działajacy kontener\r\n                </li>\r\n                <li>\r\n                    Dockerfile --(docker build)--> Obraz na dysku --(docker\r\n                    run)--> Działajacy kontener\r\n                </li>\r\n            </ol>\r\n        </article>\r\n        <br />\r\n    {:else if tabs[1].active}\r\n        <article class=\"content-area\">\r\n            <h2>4.3</h2>\r\n            Poniżej mała wizualizacja do wyklikania, by zobaczyć zależności pomiędzy\r\n            obrazami, a kontenerami oraz różne ścieżki ich pozyskiwania. Do dyspozycji\r\n            mamy chmurę DockerHub oraz dwa pliki Dockerfile (jeden do backendu, drugi\r\n            do frontendu).\r\n\r\n            <section class=\"dockerfile\">\r\n                <Cloud />\r\n                <Editor code={codeBackend} />\r\n                <Editor code={codeFrontend} />\r\n            </section>\r\n\r\n            Przy pomocy poniższych przycisków pobierz obraz z DockerHub oraz\r\n            zbuduj dwa kolejne z plików Dockerfile.<br /><br />\r\n\r\n            <section class=\"dockerfile\">\r\n                <button on:click={() => showCube(\"im1\")}\r\n                    >docker pull mongo</button\r\n                >\r\n                <button on:click={() => showCube(\"im2\")}\r\n                    >docker build -t user/python ./backend\r\n                </button>\r\n                <button on:click={() => showCube(\"im3\")}\r\n                    >docker build -t user/node ./frontend</button\r\n                >\r\n            </section>\r\n\r\n            <article class=\"cubesList\">\r\n                {#if visibility.im1}\r\n                    <CubeNamed cubeType={cubes.image} name={\"mongo:latest\"} />\r\n                {/if}\r\n                {#if visibility.im2}\r\n                    <CubeNamed\r\n                        cubeType={cubes.image}\r\n                        name={\"user/python:latest\"}\r\n                    />\r\n                {/if}\r\n                {#if visibility.im3}\r\n                    <CubeNamed\r\n                        cubeType={cubes.image}\r\n                        name={\"user/node:latest\"}\r\n                    />\r\n                {/if}\r\n            </article>\r\n\r\n            Następnie uruchom jeden kontener z mongo oraz dwa kontenery z obrazu\r\n            pythona (jak widać, z jednego obrazu można uruchamiać kilka\r\n            kontenerów).<br /><br />\r\n\r\n            <section class=\"dockerfile\">\r\n                <button on:click={() => showCube(\"co1\")}\r\n                    >docker run mongo:latest</button\r\n                >\r\n                <button on:click={() => showCube(\"co2\")}\r\n                    >docker run user/python\r\n                </button>\r\n                <button on:click={() => showCube(\"co3\")}\r\n                    >docker run user/python</button\r\n                >\r\n            </section>\r\n\r\n            <article class=\"cubesList\">\r\n                {#if visibility.co1}\r\n                    <CubeNamed\r\n                        cubeType={cubes.container}\r\n                        name={\"flamboyant_goldstine\"}\r\n                    />\r\n                {/if}\r\n                {#if visibility.co2}\r\n                    <CubeNamed\r\n                        cubeType={cubes.container}\r\n                        name={\"electic_mclean\"}\r\n                    />\r\n                    <div />\r\n                {/if}\r\n                {#if visibility.co3}\r\n                    <CubeNamed\r\n                        cubeType={cubes.container}\r\n                        name={\"elated_buck\"}\r\n                    />\r\n                {/if}\r\n            </article>\r\n\r\n            Gdy sami nie nadamy nazwy kontenerom, zrobi to za nas docker i jak\r\n            widać... są one dosyć egzotyczne.\r\n        </article>\r\n        <br />\r\n    {:else if tabs[0].active}\r\n        <article class=\"content-area\">\r\n            <h2>4.4</h2>\r\n            Na koniec tego rozdziału ułóż obraz z kolejnych warstw z Dockerfile,\r\n            przeciągajac i upuszczając kafelki z dołu. Z lewej strony powinny być\r\n            pierwsze warstwy, z prawej ostatnie. Pamiętaj, aby najpierw użyć obrazu\r\n            bazowego, potem skopiować pliki, następnie zainstalować biblioteki, a\r\n            dopiero na końcu uruchomić główny skrypt.<br /><br />\r\n\r\n            <DragDrop />\r\n\r\n            Z gotowego obrazu (metoda przeciągnij i upuść symulowała tutaj\r\n            komendę docker build) należy uruchomić obraz. <br /><br />\r\n\r\n            <section class=\"dockerfile\">\r\n                <button on:click={() => showCube(\"co4\")}\r\n                    >docker run user/calc</button\r\n                >\r\n            </section>\r\n\r\n            <article class=\"cubesList\">\r\n                {#if visibility.co4}\r\n                    <CubeNamed cubeType={cubes.container} name={\"calculator\"} />\r\n                {/if}\r\n            </article>\r\n\r\n        </article>\r\n        <br />\r\n    {/if}\r\n</section>\r\n\r\n<style>\r\n    .numbers {\r\n        background: linear-gradient(to bottom, #ffb73265 83%, red 17%);\r\n        background-attachment: fixed;\r\n        -webkit-text-stroke-color: #ffb73265;\r\n        -webkit-text-fill-color: transparent;\r\n        -webkit-background-clip: text;\r\n        font-size: 8vw;\r\n        font-weight: bold;\r\n        text-align: center;\r\n    }\r\n\r\n    .dockerfile {\r\n        display: flex;\r\n        flex-flow: row wrap;\r\n        justify-content: center;\r\n    }\r\n\r\n    aside {\r\n        border: 2px solid;\r\n        padding: 5px;\r\n        width: 65%;\r\n    }\r\n\r\n    .cubesList {\r\n        justify-content: space-around;\r\n    }\r\n\r\n    .content-area {\r\n        padding-bottom: 150px;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    import Navigation from \"../Navigation.svelte\";\r\n    import Image from \"../Image.svelte\";\r\n    import Container from \"../Container.svelte\";\r\n    export let switchers;\r\n\r\n    let tabs = [\r\n        { id: 1, active: false },\r\n        { id: 0, active: true },\r\n    ];\r\n</script>\r\n\r\n<Navigation bind:switchers bind:tabs />\r\n<section class=\"subbody\">\r\n    <h1>Rozdział 5</h1>\r\n    <h2>- Docker compose -</h2>\r\n\r\n    {#if tabs[1].active}\r\n        <article class=\"content-area\">\r\n            <h2>5.1</h2>\r\n        </article>\r\n        <br />\r\n    {:else if tabs[0].active}\r\n        <article class=\"content-area\">\r\n            <h2>5.2</h2>\r\n        </article>\r\n        <br />\r\n    {/if}\r\n</section>\r\n\r\n<style>\r\n</style>\r\n","<script lang=\"ts\">\r\n    import Navigation from \"../Navigation.svelte\";\r\n    import Image from \"../Image.svelte\";\r\n    import Container from \"../Container.svelte\";\r\n    export let switchers;\r\n\r\n    let tabs = [\r\n        { id: 1, active: false },\r\n        { id: 0, active: true },\r\n    ];\r\n</script>\r\n\r\n<Navigation bind:switchers bind:tabs />\r\n<section class=\"subbody\">\r\n    <h1>Rozdział 6</h1>\r\n    <h2>- Sieci kontenerów -</h2>\r\n\r\n    {#if tabs[1].active}\r\n        <article class=\"content-area\">\r\n            <h2>6.1</h2>\r\n        </article>\r\n        <br />\r\n    {:else if tabs[0].active}\r\n        <article class=\"content-area\">\r\n            <h2>6.2</h2>\r\n        </article>\r\n        <br />\r\n    {/if}\r\n</section>\r\n\r\n<style>\r\n</style>\r\n","<script lang=\"ts\">\r\n    import Navigation from \"../Navigation.svelte\";\r\n    import Image from \"../Image.svelte\";\r\n    import Container from \"../Container.svelte\";\r\n    export let switchers;\r\n\r\n    let tabs = [\r\n        { id: 1, active: false },\r\n        { id: 0, active: true },\r\n    ];\r\n</script>\r\n\r\n<Navigation bind:switchers bind:tabs />\r\n<section class=\"subbody\">\r\n    <h1>Rozdział 7</h1>\r\n    <h2>- Woluminy -</h2>\r\n\r\n    {#if tabs[1].active}\r\n        <article class=\"content-area\">\r\n            <h2>7.1</h2>\r\n        </article>\r\n        <br />\r\n    {:else if tabs[0].active}\r\n        <article class=\"content-area\">\r\n            <h2>7.2</h2>\r\n        </article>\r\n        <br />\r\n    {/if}\r\n</section>\r\n\r\n<style>\r\n</style>\r\n","<script lang=\"ts\">\r\n    import Navigation from \"../Navigation.svelte\";\r\n    import Image from \"../Image.svelte\";\r\n    import Container from \"../Container.svelte\";\r\n    export let switchers;\r\n\r\n    let tabs = [\r\n        { id: 1, active: false },\r\n        { id: 0, active: true },\r\n    ];\r\n</script>\r\n\r\n<Navigation bind:switchers bind:tabs />\r\n<section class=\"subbody\">\r\n    <h1>Rozdział 8</h1>\r\n    <h2>- Dockerowe tricki -</h2>\r\n\r\n    {#if tabs[1].active}\r\n        <article class=\"content-area\">\r\n            <h2>8.1</h2>\r\n        </article>\r\n        <br />\r\n    {:else if tabs[0].active}\r\n        <article class=\"content-area\">\r\n            <h2>8.2</h2>\r\n        </article>\r\n        <br />\r\n    {/if}\r\n</section>\r\n\r\n<style>\r\n</style>\r\n","<script lang=\"ts\">\n\timport BookList from \"./components/BookList.svelte\";\n\timport Chapter1 from \"./components/chapters/Chapter1.svelte\";\n\timport Chapter2 from \"./components/chapters/Chapter2.svelte\";\n\timport Chapter3 from \"./components/chapters/Chapter3.svelte\";\n\timport Chapter4 from \"./components/chapters/Chapter4.svelte\";\n\timport Chapter5 from \"./components/chapters/Chapter5.svelte\";\n\timport Chapter6 from \"./components/chapters/Chapter6.svelte\";\n\timport Chapter7 from \"./components/chapters/Chapter7.svelte\";\n\timport Chapter8 from \"./components/chapters/Chapter8.svelte\";\n\n\tlet items = [\n\t\t{\n\t\t\tid: 1,\n\t\t\ttitle: \"Rozdział 1\",\n\t\t\tsubtitle: \"Konteneryzacja\",\n\t\t\tcontent: \"Na czym polega konteneryzacja?\",\n\t\t\tbg: \"1.png\",\n\t\t\th: 20,\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\ttitle: \"Rozdział 2\",\n\t\t\tsubtitle: \"Obraz vs kontener\",\n\t\t\tcontent: \"Czym się różnią obrazy od kontenerów?\",\n\t\t\tbg: \"2.jpg\",\n\t\t\th: 60,\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\ttitle: \"Rozdział 3\",\n\t\t\tsubtitle: \"Docker Hub\",\n\t\t\tcontent: \"O największym repozytorium obrazów dockerowych.\",\n\t\t\tbg: \"3.png\",\n\t\t\th: 100,\n\t\t},\n\t\t{\n\t\t\tid: 4,\n\t\t\ttitle: \"Rozdział 4\",\n\t\t\tsubtitle: \"Dockerfile\",\n\t\t\tcontent: \"Jak tworzyć własne obrazy i budować z nich kontenery?\",\n\t\t\tbg: \"4.jpg\",\n\t\t\th: 140,\n\t\t},\n\t\t{\n\t\t\tid: 5,\n\t\t\ttitle: \"Rozdział 5\",\n\t\t\tsubtitle: \"Docker compose\",\n\t\t\tcontent: \"Czyli aplikacje wielokontenerowe.\",\n\t\t\tbg: \"5.png\",\n\t\t\th: 180,\n\t\t},\n\t\t{\n\t\t\tid: 6,\n\t\t\ttitle: \"Rozdział 6\",\n\t\t\tsubtitle: \"Sieci kontenerów\",\n\t\t\tcontent: \"Jak komunikują się kontenery?\",\n\t\t\tbg: \"6.png\",\n\t\t\th: 200,\n\t\t},\n\t\t{\n\t\t\tid: 7,\n\t\t\ttitle: \"Rozdział 7\",\n\t\t\tsubtitle: \"Woluminy\",\n\t\t\tcontent: \"O współdzieleniu zasobów.\",\n\t\t\tbg: \"7.png\",\n\t\t\th: 240,\n\t\t},\n\t\t{\n\t\t\tid: 8,\n\t\t\ttitle: \"Rozdział 8\",\n\t\t\tsubtitle: \"Dockerowe tricki\",\n\t\t\tcontent:\n\t\t\t\t\"Uzupełniający rozdział o bardziej zaawansowanych wskazówkach.\",\n\t\t\tbg: \"8.png\",\n\t\t\th: 290,\n\t\t},\n\t];\n\n\tlet switchers = {\n\t\tmenu: true,\n\t\tch1: false,\n\t\tch2: false,\n\t\tch3: false,\n\t\tch4: false,\n\t\tch5: false,\n\t\tch6: false,\n\t\tch7: false,\n\t\tch8: false,\n\t};\n</script>\n\n<main>\n\t{#if switchers.menu}\n\t\t<section class=\"subbody\">\n\t\t\t<BookList {items} bind:switchers />\n\t\t</section>\n\t{:else if switchers.ch1}\n\t\t<Chapter1 bind:switchers />\n\t{:else if switchers.ch2}\n\t\t<Chapter2 bind:switchers />\n\t{:else if switchers.ch3}\n\t\t<Chapter3 bind:switchers />\n\t{:else if switchers.ch4}\n\t\t<Chapter4 bind:switchers />\n\t{:else if switchers.ch5}\n\t\t<Chapter5 bind:switchers />\n\t{:else if switchers.ch6}\n\t\t<Chapter6 bind:switchers />\n\t{:else if switchers.ch7}\n\t\t<Chapter7 bind:switchers />\n\t{:else if switchers.ch8}\n\t\t<Chapter8 bind:switchers />\n\t{/if}\n</main>\n\n<style>\n</style>\n","import App from './App.svelte';\nconst app = new App({\n    target: document.body,\n    props: {}\n});\nexport default app;\n"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","src_url_equal","element_src","url","document","createElement","href","action_destroyer","action_result","destroy","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","callback","promise","Promise","fulfill","add","abort","append","target","node","appendChild","get_root_for_style","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","element","style","head","append_stylesheet","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","setProperty","HtmlTag","constructor","this","e","n","html","h","m","nodeName","t","innerHTML","Array","from","childNodes","p","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","rule","str","hash","charCodeAt","doc","stylesheet","__svelte_stylesheet","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","add_transform","getBoundingClientRect","left","top","getComputedStyle","transform","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","push","add_flush_callback","flushing","seen_callbacks","flush","update","$$","pop","has","fragment","before_update","dirty","ctx","after_update","wait","then","dispatch","direction","kind","dispatchEvent","type","detail","bubbles","createEvent","initCustomEvent","custom_event","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_in_transition","params","animation_name","config","running","cleanup","go","easing","tick","css","start_time","end_time","started","start","invalidate","end","create_out_transition","group","reset","outro_and_destroy_block","lookup","fix_and_outro_and_destroy_block","update_keyed_each","old_blocks","get_key","dynamic","list","create_each_block","get_context","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","get","set","Math","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","bind","index","props","undefined","bound","create_component","mount_component","customElement","on_mount","on_destroy","new_on_destroy","map","destroy_component","make_dirty","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","children","l","intro","SvelteComponent","$destroy","$on","splice","$set","$$props","obj","$$set","keys","content","title","subtitle","bg","id","item","switchers","items","tabs","color","translate","speed","rotate","margin","cube","no","command","output","cubeType","image","container","code","subscriber_queue","cubicOut","elasticOut","sin","PI","pow","quintOut","is_date","prototype","toString","call","tick_spring","last_value","current_value","target_value","delta","velocity","dt","opts","stiffness","damping","inv_mass","precision","settled","getTime","isArray","_","next_value","Error","spring","store","stop","subscribers","new_value","run_queue","subscriber","subscribe","writable","last_time","current_token","inv_mass_recovery_rate","cancel_task","token","hard","soft","rate","min","fulfil","crossfade","_a","fallback","defaults","s","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","__rest","to_receive","to_send","transition","counterparts","rect","sqrt","to","dx","dy","dw","width","dh","height","opacity","u","dropTarget","draggable","lastX","lastY","startRect","offsetX","offsetY","offset","y","handleMousedown","preventDefault","clientX","clientY","classList","CustomEvent","handleMousemove","handleMouseup","midX","midY","remove","candidate","elementFromPoint","targets","matches","flip","ox","oy","transformOrigin","parseFloat","sx","sy","position","right","bottom","shelf","cart","putInShelf","oldItem","oldShelfIndex","putInCart","send","receive","co4","im1","im2","im3","co1","co2","co3","visibility","im4","showCube","menu","ch1","ch2","ch3","ch4","ch5","ch6","ch7","ch8","body"],"mappings":"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"}